name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
        uses: ./.github/actions/setup
      # lerna expects to be authenticated for publishing to NPM. This step will fail CI if NPM is not authenticated
      - name: Check NPM authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.SEMANTIC_RELEASE_NPM_TOKEN }}" >> .npmrc
          npm whoami
      - name: Install and Setup Dependencies
        run: npm run setup
      # build must come before running linting and tests for the `dist` directory to exist.
      - name: Build
        run: npm run build
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm run test
      - name: Coverage Report
        uses: codecov/codecov-action@v1
      - name: Publish Changed Packages
        run: lerna publish --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


          # name: Lerna CI

          # on:
          #   push:
          #     branches:
          #       - main
          
          # jobs:
          #   build:
          
          #     runs-on: ubuntu-latest
          #     env:
          #       NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # set this token manually
          #     steps:
          
          #     - name: Checkout
          #       uses: actions/checkout@v2
          #       with:
          #         fetch-depth: "0" # pulls all history and tags for Lerna to detect what packages changed.
          #         token: ${{ secrets.GITHUB_TOKEN }} # this token is available by default
          
          #     # setup .npmrc using NODE_AUTH_TOKEN
          #     - name: Setup .npmrc file for publish
          #       uses: actions/setup-node@v2
          #       with:
          #         node-version: '12.x'
          #         registry-url: 'https://registry.npmjs.org'
          
          #     - name: Configure Git User
          #       run: |
          #         git config --global user.email "lerna-ci@jitsu.com"
          #         git config --global user.name "lerna-ci@$GITHUB_ACTOR"
          
          #     - name: Check if able to publish changes
          #       run: npm whoami # will throw and exit if npm is not ready to publish
          
          #     - name: Install dependencies
          #       run: yarn install
          
          #     - name: Publish
          #       run: lerna publish --no-verify-access # the flag is needed if NPM_TOKEN is an Automation Token